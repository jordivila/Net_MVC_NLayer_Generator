<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging" requirePermission="true" />
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data" requirePermission="true" />
    <sectionGroup name="templateSettings">
      <section name="mailingSettings" type="$customNamespace$.Models.Configuration.ConfigSections.Mailing.MailingSettingsConfigSection, $customNamespace$.Models" />
      <section name="domainInfoSettings" type="$customNamespace$.Models.Configuration.ConfigSections.DomainInfo.DomainInfoSettingsConfigSection, $customNamespace$.Models" />
    </sectionGroup>
  </configSections>
  <templateSettings>
    <domainInfoSettings>
      <domainInfo domainName="junceum.com" securityProtocol="https"></domainInfo>
    </domainInfoSettings>
    <mailingSettings>
      <mailAddresses supportTeamEmailAddress="support@junceum.com"></mailAddresses>
    </mailingSettings>
  </templateSettings>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>
  <dataConfiguration defaultDatabase="DbCnnStrMembership" />
  <connectionStrings>
    <clear/>
    <add name="DbCnnStrMembership"        connectionString="Server=$DatabaseServerName$;Database=$MembershipDBName$;Integrated Security=SSPI;" providerName="System.Data.SqlClient" />
    <add name="DbCnnStrLogging"           connectionString="Server=$DatabaseServerName$;Database=$LoggingDBName$;Integrated Security=SSPI;" providerName="System.Data.SqlClient" />
    <add name="DbCnnStrTokenPersistence"  connectionString="Server=$DatabaseServerName$;Database=$TokenPersistenceDBNameKey$;Integrated Security=SSPI;" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <loggingConfiguration name="logWriterName" tracingEnabled="true" defaultCategory="General" logWarningsWhenNoCategoriesMatch="true">
    <listeners>
      <add name="Database Trace Listener" type="$customNamespace$.Models.Logging.DatabaseTraceListener, $customNamespace$.Models" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.CustomTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" databaseInstanceName="DbCnnStrLogging" />
      <!--<add name="ListenerOnAzureStorageTable" azureStorageConnectionStringName="StorageConnectionString" type="$customNamespace$.Models.Logging.AzureTableStorageListener, $customNamespace$.Models" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.CustomTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" />-->
    </listeners>
    <categorySources>
      <!-- Begin WCF Logging Scope-->
      <add switchValue="All" name="WCFGeneral">
        <listeners>
          <!--<add name="ListenerOnAzureStorageTable" />-->
          <add name="Database Trace Listener" />
        </listeners>
      </add>
      <add switchValue="All" name="WCFBeginRequest">
        <listeners>
          <!--<add name="ListenerOnAzureStorageTable" />-->
          <add name="Database Trace Listener" />
        </listeners>
      </add>
      <!-- End WCF Logging Scope -->

      <!-- Begin UI Proxied Logging -->
      <add switchValue="All" name="UIGeneral">
        <listeners>
          <!--<add name="ListenerOnAzureStorageTable" />-->
          <add name="Database Trace Listener" />
        </listeners>
      </add>
      <add switchValue="All" name="UIBeginRequest">
        <listeners>
          <add name="Database Trace Listener" />
          <!--<add name="ListenerOnAzureStorageTable" />-->
        </listeners>
      </add>
      <add switchValue="All" name="UIServerSideUnhandledException">
        <listeners>
          <add name="Database Trace Listener" />
          <!--<add name="ListenerOnAzureStorageTable" />-->
        </listeners>
      </add>
      <add switchValue="All" name="UIClientSideJavascriptError">
        <listeners>
          <add name="Database Trace Listener" />
          <!--<add name="ListenerOnAzureStorageTable" />-->
        </listeners>
      </add>
      <!--End UI Proxied Logging -->
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category" />
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="Database Trace Listener" />
          <!--<add name="ListenerOnAzureStorageTable" />-->
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <system.net>
    <mailSettings>
      <smtp>
        <!--<network host="smtp.xxxx.com" port="465" userName="xxxx@xxxxx.com" password="xxxxx" defaultCredentials="false" enableSsl="true" />-->
        <!--<network host="smtp.xxxx.org" userName="xxx@xxxx.com" password="xxxxx" defaultCredentials="false"  />-->
      </smtp>
    </mailSettings>
  </system.net>
  <system.web>
    <compilation debug="true" targetFramework="4.0" />
    <anonymousIdentification enabled="false" />
    <authentication mode="Forms">
      <!--Do NOT remove sliding expiration -->
      <forms cookieless="UseCookies" name=".WCFAUTH" slidingExpiration="true" timeout="20"></forms>
    </authentication>
    <membership defaultProvider="AspNetSqlMembershipProvider" userIsOnlineTimeWindow="20">
      <providers>
        <clear />
        <add applicationName="$WebSiteApplicationName$" connectionStringName="DbCnnStrMembership" enablePasswordReset="true" enablePasswordRetrieval="false" maxInvalidPasswordAttempts="5" minRequiredNonalphanumericCharacters="0" minRequiredPasswordLength="6" name="AspNetSqlMembershipProvider" passwordAttemptWindow="10" requiresQuestionAndAnswer="false" requiresUniqueEmail="true" type="System.Web.Security.SqlMembershipProvider" />
      </providers>
    </membership>
    <profile enabled="true" defaultProvider="AspNetSqlProfileProvider" automaticSaveEnabled="true">
      <properties>
        <add name="FirstName" type="System.String" allowAnonymous="false" serializeAs="String" />
        <add name="LastName" type="System.String" allowAnonymous="false" serializeAs="String" />
        <add name="BirthDate" type="System.Nullable`1[System.DateTime]" allowAnonymous="false" />
        <add name="Gender" type="System.String" allowAnonymous="false" />
        <add name="Culture" type="System.String" allowAnonymous="false" />
        <add name="Theme" type="System.String" allowAnonymous="false" />
      </properties>
      <providers>
        <clear />
        <add name="AspNetSqlProfileProvider" type="System.Web.Profile.SqlProfileProvider" connectionStringName="DbCnnStrMembership" applicationName="$WebSiteApplicationName$"></add>
      </providers>
    </profile>
    <roleManager enabled="true" defaultProvider="AspNetSqlRoleProvider">
      <providers>
        <clear />
        <add name="AspNetSqlRoleProvider" type="System.Web.Security.SqlRoleProvider" connectionStringName="DbCnnStrMembership" applicationName="$WebSiteApplicationName$" />
      </providers>
    </roleManager>
    <sessionState mode="StateServer" />
  </system.web>
  
  <system.serviceModel>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="false"></serviceHostingEnvironment>
    <bindings>
      <netTcpBinding>
        <binding name="$customBindingIsNetTcp$" portSharingEnabled="false" maxReceivedMessageSize="2147483647">
          <readerQuotas maxStringContentLength="2147483647"></readerQuotas>
          <security mode="None"></security>
        </binding>
      </netTcpBinding>
      <basicHttpBinding>
        <binding name="$customBindingIsBasicHttp$" maxReceivedMessageSize="2147483647">
          <readerQuotas maxStringContentLength="2147483647"/>
          <security mode="None"></security>
        </binding>
      </basicHttpBinding>
    </bindings>
    <extensions>
      <behaviorExtensions>
        <add name="loggingServiceBehavior" type="$customNamespace$.WCF.ServicesLibrary.LoggingServiceBehaviorElement,$customNamespace$.WCF.ServicesLibrary" />
      </behaviorExtensions>
    </extensions>
    <behaviors>
      <serviceBehaviors>
        <behavior name="WCFHostService.MyServiceBehavior">
          <serviceMetadata httpGetEnabled="false" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <services>
      <service behaviorConfiguration="WCFHostService.MyServiceBehavior" name="$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices.Admin.MembershipServices">
        <endpoint address="$customBindingProtocol$://localhost:8523/$customNamespace$.Models.Membership.IMembershipProxy"
                  binding="$customBindingTypeName$" 
                  bindingConfiguration="$customBindingConfigurationName$" 
                  contract="$customNamespace$.Models.Membership.IMembershipProxy" />
      </service>
      <service behaviorConfiguration="WCFHostService.MyServiceBehavior" name="$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices.AuthenticationService">
        <endpoint address="$customBindingProtocol$://localhost:8523/$customNamespace$.Models.Authentication.IAuthenticationProxy"
                  binding="$customBindingTypeName$" 
                  bindingConfiguration="$customBindingConfigurationName$" 
                  contract="$customNamespace$.Models.Authentication.IAuthenticationProxy" />
      </service>
      <service behaviorConfiguration="WCFHostService.MyServiceBehavior" name="$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices.Admin.RoleServiceAdmin">
        <endpoint address="$customBindingProtocol$://localhost:8523/$customNamespace$.Models.Roles.IRoleManagerProxy" 
                  binding="$customBindingTypeName$" 
                  bindingConfiguration="$customBindingConfigurationName$" 
                  contract="$customNamespace$.Models.Roles.IRoleManagerProxy" />
      </service>
      <service behaviorConfiguration="WCFHostService.MyServiceBehavior" name="$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices.RoleService">
        <endpoint address="$customBindingProtocol$://localhost:8523/$customNamespace$.Models.Roles.IRolesProxy" 
                  binding="$customBindingTypeName$" 
                  bindingConfiguration="$customBindingConfigurationName$" 
                  contract="$customNamespace$.Models.Roles.IRolesProxy" />
      </service>
      <service behaviorConfiguration="WCFHostService.MyServiceBehavior" name="$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices.ProfileService">
        <endpoint address="$customBindingProtocol$://localhost:8523/$customNamespace$.Models.Profile.IProfileProxy" 
                  binding="$customBindingTypeName$" 
                  bindingConfiguration="$customBindingConfigurationName$" 
                  contract="$customNamespace$.Models.Profile.IProfileProxy" />
      </service>
      <service behaviorConfiguration="WCFHostService.MyServiceBehavior" name="$customNamespace$.WCF.ServicesLibrary.LoggingServices.LoggingService">
        <endpoint address="$customBindingProtocol$://localhost:8523/$customNamespace$.Models.Logging.ILoggingProxy" 
                  binding="$customBindingTypeName$" 
                  bindingConfiguration="$customBindingConfigurationName$" 
                  contract="$customNamespace$.Models.Logging.ILoggingProxy" />
      </service>
      <service behaviorConfiguration="WCFHostService.MyServiceBehavior" name="$customNamespace$.WCF.ServicesLibrary.SyndicationServices.SyndicationService">
        <endpoint address="$customBindingProtocol$://localhost:8523/$customNamespace$.Models.Syndication.ISyndicationProxy" 
                  binding="$customBindingTypeName$" 
                  bindingConfiguration="$customBindingConfigurationName$" 
                  contract="$customNamespace$.Models.Syndication.ISyndicationProxy" />
      </service>
    </services>
  </system.serviceModel>
  
  <!--
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel"
              switchValue="Information, ActivityTracing"
              propagateActivity="true" >
        <listeners>
          <add name="xml"/>
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging">
        <listeners>
          <add name="xml"/>
        </listeners>
      </source>
      <source name="myUserTraceSource"
              switchValue="Information, ActivityTracing">
        <listeners>
          <add name="xml"/>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add name="xml"
           type="System.Diagnostics.XmlWriterTraceListener"
           initializeData="c:\$customNamespace$.WCF.svclog" />
    </sharedListeners>
  </system.diagnostics>
  -->
</configuration>