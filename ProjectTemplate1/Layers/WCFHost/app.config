<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging" requirePermission="true" />
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data" requirePermission="true" />
    <sectionGroup name="templateSettings">
      <section name="mailingSettings" type="$customNamespace$.Models.Configuration.ConfigSections.Mailing.MailingSettingsConfigSection, $customNamespace$.Models" />
      <section name="domainInfoSettings" type="$customNamespace$.Models.Configuration.ConfigSections.DomainInfo.DomainInfoSettingsConfigSection, $customNamespace$.Models" />
    </sectionGroup>
  </configSections>
  <templateSettings>
    <domainInfoSettings>
      <domainInfo domainName="CurlyCode.com" securityProtocol="https"></domainInfo>
    </domainInfoSettings>
    <mailingSettings>
      <mailAddresses supportTeamEmailAddress="support@template.com"></mailAddresses>
    </mailingSettings>
  </templateSettings>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>
  <dataConfiguration defaultDatabase="Membership Database String" />
  <connectionStrings>
    <add name="Membership Database String" connectionString="Server=$DatabaseServerName$;Database=$MembershipDBName$;Integrated Security=SSPI;" providerName="System.Data.SqlClient" />
    <add name="Logging Database String" connectionString="Server=$DatabaseServerName$;Database=$LoggingDBName$;Integrated Security=SSPI;" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <loggingConfiguration name="logWriterName" tracingEnabled="true" defaultCategory="General" logWarningsWhenNoCategoriesMatch="true">
    <listeners>
      <add name="Database Trace Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.Database.FormattedDatabaseTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging.Database" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Database.Configuration.FormattedDatabaseTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging.Database" databaseInstanceName="Logging Database String" writeLogStoredProcName="WriteLog" addCategoryStoredProcName="AddCategory" formatter="Text Formatter Xml Output" />
    </listeners>
    <formatters>
      <add name="Text Formatter Xml Output" type="$customNamespace$.Models.Logging.RollingXmlTraceListenerFormatter, $customNamespace$.Models" template="&lt;LogMessageModel&gt;  &lt;Timestamp&gt;&lt;![CDATA[{timestamp(yyyy/MM/dd HH:mm:ss.fffffff)}]]&gt;&lt;/Timestamp&gt;  &lt;Message&gt;&lt;![CDATA[{message}]]&gt;&lt;/Message&gt;  &lt;Category&gt;&lt;![CDATA[{category}]]&gt;&lt;/Category&gt;  &lt;Priority&gt;&lt;![CDATA[{priority}]]&gt;&lt;/Priority&gt;  &lt;EventId&gt;&lt;![CDATA[{eventid}]]&gt;&lt;/EventId&gt;  &lt;Severity&gt;&lt;![CDATA[{severity}]]&gt;&lt;/Severity&gt;  &lt;Title&gt;&lt;![CDATA[{title}]]&gt;&lt;/Title&gt;  &lt;Machine&gt;&lt;![CDATA[{localMachine}]]&gt;&lt;/Machine&gt;  &lt;App_Domain&gt;&lt;![CDATA[{localAppDomain}]]&gt;&lt;/App_Domain&gt;  &lt;ProcessId&gt;&lt;![CDATA[{localProcessId}]]&gt;&lt;/ProcessId&gt;  &lt;Process_Name&gt;&lt;![CDATA[{localProcessName}]]&gt;&lt;/Process_Name&gt;  &lt;Thread_Name&gt;&lt;![CDATA[{threadName}]]&gt;&lt;/Thread_Name&gt;  &lt;Win32_ThreadId&gt;&lt;![CDATA[{win32ThreadId}]]&gt;&lt;/Win32_ThreadId&gt;&lt;FormattedMessage&gt;{dictionary(&lt;KeyValuePair&gt;&lt;Name&gt;&lt;![CDATA[{key}]]&gt;&lt;/Name&gt;&lt;Value&gt;&lt;![CDATA[{value}]]&gt;&lt;/Value&gt;&lt;/KeyValuePair&gt;)}&lt;/FormattedMessage&gt;&lt;/LogMessageModel&gt;" />
    </formatters>
    <categorySources>
      <!-- Begin UI Remote Logging -->
      <add switchValue="All" name="WCFGeneral">
        <listeners>
          <add name="Database Trace Listener" />
        </listeners>
      </add>
      <add switchValue="Off" name="WCFBeginRequest">
        <listeners>
          <add name="Database Trace Listener" />
        </listeners>
      </add>
      <add switchValue="Off" name="System.ServiceModel">
        <listeners>
          <add name="Database Trace Listener" />
        </listeners>
      </add>
      <!-- End UI Remote Logging -->
      <!-- Begin UI Remote Logging -->
      <add switchValue="All" name="UIGeneral">
        <listeners>
          <add name="Database Trace Listener" />
        </listeners>
      </add>
      <add switchValue="All" name="UIBeginRequest">
        <listeners>
          <add name="Database Trace Listener" />
        </listeners>
      </add>
      <add switchValue="All" name="UIServerSideUnhandledException">
        <listeners>
          <add name="Database Trace Listener" />
        </listeners>
      </add>
      <add switchValue="All" name="UIClientSideJavascriptError">
        <listeners>
          <add name="Database Trace Listener" />
        </listeners>
      </add>
      <!--End UI Remote Logging -->
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category" />
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="Database Trace Listener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <system.net>
    <mailSettings>
      <smtp>
        <!--<network host="smtp.xxxx.com" port="465" userName="xxxx@xxxxx.com" password="xxxxx" defaultCredentials="false" enableSsl="true" />-->
        <!--<network host="smtp.xxxx.org" userName="xxx@xxxx.com" password="xxxxx" defaultCredentials="false"  />-->
      </smtp>
    </mailSettings>
  </system.net>
  <system.web>
    <compilation debug="true" targetFramework="4.0" />
    <anonymousIdentification enabled="false" />
    <authentication mode="Forms">
      <!--Do NOT remove sliding expiration -->
      <forms cookieless="UseCookies" name=".WCFAUTH" slidingExpiration="true" timeout="20"></forms>
    </authentication>
    <membership defaultProvider="AspNetSqlMembershipProvider" userIsOnlineTimeWindow="20">
      <providers>
        <clear />
        <add applicationName="$WebSiteApplicationName$" connectionStringName="Membership Database String" enablePasswordReset="true" enablePasswordRetrieval="false" maxInvalidPasswordAttempts="5" minRequiredNonalphanumericCharacters="0" minRequiredPasswordLength="6" name="AspNetSqlMembershipProvider" passwordAttemptWindow="10" requiresQuestionAndAnswer="false" requiresUniqueEmail="true" type="System.Web.Security.SqlMembershipProvider" />
      </providers>
    </membership>
    <profile enabled="true" defaultProvider="AspNetSqlProfileProvider" automaticSaveEnabled="true">
      <properties>
        <add name="FirstName" type="System.String" allowAnonymous="false" serializeAs="String" />
        <add name="LastName" type="System.String" allowAnonymous="false" serializeAs="String" />
        <add name="BirthDate" type="System.Nullable`1[System.DateTime]" allowAnonymous="false" />
        <add name="Gender" type="System.String" allowAnonymous="false" />
        <add name="Culture" type="System.String" allowAnonymous="false" />
        <add name="Theme" type="System.String" allowAnonymous="false" />
      </properties>
      <providers>
        <clear />
        <add name="AspNetSqlProfileProvider" type="System.Web.Profile.SqlProfileProvider" connectionStringName="Membership Database String" applicationName="$WebSiteApplicationName$"></add>
      </providers>
    </profile>
    <roleManager enabled="true" defaultProvider="AspNetSqlRoleProvider">
      <providers>
        <clear />
        <add name="AspNetSqlRoleProvider" type="System.Web.Security.SqlRoleProvider" connectionStringName="Membership Database String" applicationName="$WebSiteApplicationName$" />
      </providers>
    </roleManager>
    <sessionState mode="StateServer" />
  </system.web>
  <system.serviceModel>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="false"></serviceHostingEnvironment>
    <bindings>
      <netTcpBinding>
        <!-- This application does not use NetTcp Port Sharing to make it easier to run. 
           Considere port sharing http://msdn.microsoft.com/es-es/library/ms734772.aspx -->
        <binding name="$customBindingIsNetTcp$" portSharingEnabled="false" maxReceivedMessageSize="2147483647">
          <readerQuotas maxStringContentLength="2147483647"></readerQuotas>
        </binding>
      </netTcpBinding>
      <basicHttpBinding>
        <binding name="$customBindingIsBasicHttp$" maxReceivedMessageSize="2147483647">
          <readerQuotas maxStringContentLength="2147483647"/>
        </binding>
      </basicHttpBinding>
    </bindings>
    <extensions>
      <behaviorExtensions>
        <add name="loggingServiceBehavior" type="$customNamespace$.WCF.ServicesLibrary.LoggingServiceBehaviorElement,$customNamespace$.WCF.ServicesLibrary" />
      </behaviorExtensions>
    </extensions>
    <behaviors>
      <serviceBehaviors>
        <behavior name="WCFHostService.MyServiceBehavior">
          <serviceMetadata httpGetEnabled="false" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <services>
      <!-- NetTcpBinding Endpoints Begin-->
      <!-- 
           This application does not use NetTcp Port Sharing to make it easier to run.  
           Considere port sharing http://msdn.microsoft.com/es-es/library/ms734772.aspx 
      -->
      <service behaviorConfiguration="WCFHostService.MyServiceBehavior" name="$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices.Admin.MembershipServices">
        <endpoint address="" binding="$customBindingTypeName$" bindingConfiguration="$customBindingConfigurationName$" contract="$customNamespace$.Models.Membership.IProviderMembership" />
        <host>
          <baseAddresses>
            <add baseAddress="$customBindingProtocol$://localhost:8523/$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices/Admin/MembershipService/" />
          </baseAddresses>
        </host>
      </service>
      <service behaviorConfiguration="WCFHostService.MyServiceBehavior" name="$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices.AuthenticationService">
        <endpoint address="" binding="$customBindingTypeName$" bindingConfiguration="$customBindingConfigurationName$" contract="$customNamespace$.Models.Authentication.IProviderAuthentication" />
        <host>
          <baseAddresses>
            <add baseAddress="$customBindingProtocol$://localhost:8524/$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices/AuthenticationService/" />
          </baseAddresses>
        </host>
      </service>
      <service behaviorConfiguration="WCFHostService.MyServiceBehavior" name="$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices.Admin.RoleServiceAdmin">
        <endpoint address="" binding="$customBindingTypeName$" bindingConfiguration="$customBindingConfigurationName$" contract="$customNamespace$.Models.Roles.IProviderRoleManager" />
        <host>
          <baseAddresses>
            <add baseAddress="$customBindingProtocol$://localhost:8525/$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices/Admin/RoleServiceAdmin/" />
          </baseAddresses>
        </host>
      </service>
      <service behaviorConfiguration="WCFHostService.MyServiceBehavior" name="$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices.RoleService">
        <endpoint address="" binding="$customBindingTypeName$" bindingConfiguration="$customBindingConfigurationName$" contract="$customNamespace$.Models.Roles.IProviderRoles" />
        <host>
          <baseAddresses>
            <add baseAddress="$customBindingProtocol$://localhost:8526/$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices/RoleService/" />
          </baseAddresses>
        </host>
      </service>
      <service behaviorConfiguration="WCFHostService.MyServiceBehavior" name="$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices.ProfileService">
        <endpoint address="" binding="$customBindingTypeName$" bindingConfiguration="$customBindingConfigurationName$" contract="$customNamespace$.Models.Profile.IProviderProxyProfileServices" />
        <host>
          <baseAddresses>
            <add baseAddress="$customBindingProtocol$://localhost:8527/$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices/ProfileService/" />
          </baseAddresses>
        </host>
      </service>
      <service behaviorConfiguration="WCFHostService.MyServiceBehavior" name="$customNamespace$.WCF.ServicesLibrary.LoggingServices.LoggingService">
        <endpoint address="" binding="$customBindingTypeName$" bindingConfiguration="$customBindingConfigurationName$" contract="$customNamespace$.Models.Logging.IProviderLogging" />
        <host>
          <baseAddresses>
            <add baseAddress="$customBindingProtocol$://localhost:8528/$customNamespace$.WCF.ServicesLibrary.LoggingServices/LoggingService/" />
          </baseAddresses>
        </host>
      </service>
      <service behaviorConfiguration="WCFHostService.MyServiceBehavior" name="$customNamespace$.WCF.ServicesLibrary.SyndicationServices.SyndicationService">
        <endpoint address="" binding="$customBindingTypeName$" bindingConfiguration="$customBindingConfigurationName$" contract="$customNamespace$.Models.Syndication.IProviderSyndication" />
        <host>
          <baseAddresses>
            <add baseAddress="$customBindingProtocol$://localhost:8529/$customNamespace$.WCF.ServicesLibrary.SyndicationServices/SyndicationService/" />
          </baseAddresses>
        </host>
      </service>
    </services>
  </system.serviceModel>
  <!--
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel"
              switchValue="Information, ActivityTracing"
              propagateActivity="true" >
        <listeners>
          <add name="xml"/>
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging">
        <listeners>
          <add name="xml"/>
        </listeners>
      </source>
      <source name="myUserTraceSource"
              switchValue="Information, ActivityTracing">
        <listeners>
          <add name="xml"/>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add name="xml"
           type="System.Diagnostics.XmlWriterTraceListener"
           initializeData="c:\$customNamespace$.WCF.svclog" />
    </sharedListeners>
  </system.diagnostics>
  -->
</configuration>