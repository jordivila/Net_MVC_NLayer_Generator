<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <sectionGroup name="templateSettings">
      <section name="unitySettings" type="$customNamespace$.Models.Configuration.ConfigSections.Unity.UnitySettingsConfigSection, $customNamespace$.Models" />
    </sectionGroup>
  </configSections>
  <templateSettings>
    <unitySettings>
      <unityInfo currentContainer="" />
    </unitySettings>
  </templateSettings>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <!--Configuration-->
    <alias alias="IProviderAuthentication" type="$customNamespace$.Models.Authentication.IProviderAuthentication,$customNamespace$.Models" />
    <alias alias="ProviderAuthentication" type="$customNamespace$.Models.Authentication.ProviderProxyAuthentication,$customNamespace$.Models" />
    <alias alias="IProviderMembership" type="$customNamespace$.Models.Membership.IProviderMembership, $customNamespace$.Models" />
    <alias alias="ProviderMembership" type="$customNamespace$.Models.Membership.ProviderProxyMembership, $customNamespace$.Models" />
    <alias alias="IProviderRoleManager" type="$customNamespace$.Models.Roles.IProviderRoleManager,$customNamespace$.Models" />
    <alias alias="ProviderRoleManager" type="$customNamespace$.Models.Roles.ProviderProxyRoleManager,$customNamespace$.Models" />
    <alias alias="IProviderRoles" type="$customNamespace$.Models.Roles.IProviderRoles,$customNamespace$.Models" />
    <alias alias="ProviderRole" type="$customNamespace$.Models.Roles.ProviderProxyRole,$customNamespace$.Models" />
    <alias alias="IProviderProfile" type="$customNamespace$.Models.Profile.IProviderProfile,$customNamespace$.Models" />
    <alias alias="ProviderProfile" type="$customNamespace$.Models.Profile.ProviderProxyProfileServices,$customNamespace$.Models" />
    <alias alias="IProviderLogging" type="$customNamespace$.Models.Logging.IProviderLogging, $customNamespace$.Models" />
    <alias alias="ProviderLogging" type="$customNamespace$.Models.Logging.ProviderProxyLogging, $customNamespace$.Models" />
    <alias alias="IProviderSyndication" type="$customNamespace$.Models.Syndication.IProviderSyndication, $customNamespace$.Models" />
    <alias alias="ProviderSyndication" type="$customNamespace$.Models.Syndication.ProviderProxySyndication, $customNamespace$.Models" />
    <alias alias="IUserRequestModel" type="$customNamespace$.Models.UserRequestModel.IUserRequestModel`2[[System.Web.HttpContext, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Web.HttpCookieCollection, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]], $customNamespace$.Models" />
    <alias alias="UserRequestModelHttpClient" type="$customNamespace$.Models.UserRequestModel.UserRequestModelHttpClient,$customNamespace$.Models" />
    <alias alias="IUserSessionModel" type="$customNamespace$.Models.UserSessionPersistence.IUserSessionModel`2[[System.Web.HttpContext, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a],[System.Web.SessionState.HttpSessionState, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]], $customNamespace$.Models" />
    <alias alias="UserSessionHttp" type="$customNamespace$.Models.UserSessionPersistence.UserSessionHttp,$customNamespace$.Models" />
    <container name="">
      <register type="IProviderAuthentication" mapTo="ProviderAuthentication" />
      <register type="IProviderMembership" mapTo="ProviderMembership" />
      <register type="IProviderRoleManager" mapTo="ProviderRoleManager" />
      <register type="IProviderRoles" mapTo="ProviderRole" />
      <register type="IProviderProfile" mapTo="ProviderProfile" />
      <register type="IProviderLogging" mapTo="ProviderLogging" />
      <register type="IProviderSyndication" mapTo="ProviderSyndication" />
      <register type="IUserRequestModel" mapTo="UserRequestModelHttpClient" />
      <register type="IUserSessionModel" mapTo="UserSessionHttp" />
    </container>
  </unity>
  <loggingConfiguration name="" tracingEnabled="true" defaultCategory="UIGeneral">
    <listeners>
      <!-- Begin This listeners write trace data in XML RollingFlatFiles -->
      <add name="ListenerByDefaultRollingXmlFile" type="$customNamespace$.Models.Logging.RollingXmlTraceListener, $customNamespace$.Models"             listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" fileName="%APPDATA%\ListenerByDefaultRollingXmlFile.xml" footer="" header="" formatter="Text Formatter Xml Output" rollSizeKB="1024" timeStampPattern="yyyy-MM-dd" maxArchivedFiles="2" />
      <add name="ListenerOnUIClientSideErrorsRollingXmlFile" type="$customNamespace$.Models.Logging.RollingXmlTraceListener, $customNamespace$.Models"  listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" fileName="%APPDATA%\App_Data\ListenerOnUIClientSideErrorsRollingXmlFile.xml" footer="" header="" formatter="Text Formatter Xml Output" rollSizeKB="1024" timeStampPattern="yyyy-MM-dd" maxArchivedFiles="2" />
      <add name="ListenerOnUIServerErrorsRollingXmlFile" type="$customNamespace$.Models.Logging.RollingXmlTraceListener, $customNamespace$.Models"      listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" fileName="%APPDATA%\App_Data\ListenerOnUIServerErrorsRollingXmlFile.xml" footer="" header="" formatter="Text Formatter Xml Output" rollSizeKB="1024" timeStampPattern="yyyy-MM-dd" maxArchivedFiles="2" />
      <add name="ListenerOnBeginRequestRollingXmlFile" type="$customNamespace$.Models.Logging.RollingXmlTraceListener, $customNamespace$.Models"        listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" fileName="%APPDATA%\App_Data\ListenerOnBeginRequestRollingXmlFile.xml" footer="" header="" formatter="Text Formatter Xml Output" rollSizeKB="1024" timeStampPattern="yyyy-MM-dd" maxArchivedFiles="2" />
      <!-- End This listeners write trace data in XML RollingFlatFiles -->
      <!-- Begin This listener send async LogEntry to Wcf Service-->
      <add name="ListenerOnUIProxied" type="$customNamespace$.Models.Logging.ProxiedWcfTraceListener, $customNamespace$.Models" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.CustomTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" formatter="Text Formatter Xml Output" />
      <!-- End This listener send async LogEntry to Wcf Service-->
    </listeners>
    <formatters>
      <add name="Text Formatter Xml Output" type="$customNamespace$.Models.Logging.RollingXmlTraceListenerFormatter, $customNamespace$.Models" />
    </formatters>
    <!-- Keep in mind all categorySources accept more than one listener. So, In case Wcf proxied does not work properly you can use Any other one -->
    <categorySources>
      <add switchValue="All" name="UIGeneral">
        <listeners>
          <add name="ListenerByDefaultRollingXmlFile" />
          <add name="ListenerOnUIProxied" />
        </listeners>
      </add>
      <add switchValue="All" name="UIBeginRequest">
        <listeners>
          <add name="ListenerOnBeginRequestRollingXmlFile" />
          <add name="ListenerOnUIProxied" />
        </listeners>
      </add>
      <add switchValue="All" name="UIServerSideUnhandledException">
        <listeners>
          <add name="ListenerOnUIServerErrorsRollingXmlFile" />
          <add name="ListenerOnUIProxied" />
        </listeners>
      </add>
      <add switchValue="All" name="UIClientSideJavascriptError">
        <listeners>
          <add name="ListenerOnUIClientSideErrorsRollingXmlFile" />
          <add name="ListenerOnUIProxied" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category" />
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="ListenerByDefaultRollingXmlFile" />
          <add name="ListenerOnUIProxied" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <cachingConfiguration defaultCacheManager="Cache Manager">
    <cacheManagers>
      <add name="Cache Manager" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="1000" numberToRemoveWhenScavenging="10" backingStoreName="NullBackingStore" />
      <add name="CacheManagerForClientResources" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="1000" numberToRemoveWhenScavenging="10" backingStoreName="NullBackingStore" />
      <add name="CacheManagerForBaseModel" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="1000" numberToRemoveWhenScavenging="10" backingStoreName="NullBackingStore" />
      <add name="CacheManagerForBlogFrontEnd" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="1000" numberToRemoveWhenScavenging="10" backingStoreName="NullBackingStore" />
      <add name="CacheManagerForProxyProviders" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="1000" numberToRemoveWhenScavenging="10" backingStoreName="NullBackingStore" />
    </cacheManagers>
    <backingStores>
      <add name="Isolated Storage Cache Store" type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.IsolatedStorageBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" encryptionProviderName="" partitionName="Isolated Storage Cache Store Partition Name" />
      <add type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="NullBackingStore" />
    </backingStores>
  </cachingConfiguration>
  <appSettings>
    <add key="webpages:Version" value="2.0.0.0" />
    <add key="PreserveLoginUrl" value="true" />
    <!--<add key="webpages:Enabled" value="true" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />-->
  </appSettings>
  <system.web>
    <!--<globalization uiCulture="es" culture="es-ES" />-->
    <sessionState mode="StateServer" cookieName=".UISessionId" />
    <customErrors mode="Off">
      <error statusCode="404" redirect="/Error/NotFound404" />
      <error statusCode="401" redirect="/Error/NotFound404" />
    </customErrors>
    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Helpers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.WebPages, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </assemblies>
    </compilation>
    <authentication mode="None" />
    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="false" />
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity.Configuration" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.414.0" newVersion="2.0.414.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.414.0" newVersion="2.0.414.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity.Interception" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.414.0" newVersion="2.0.414.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.EnterpriseLibrary.Logging" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.505.0" newVersion="5.0.505.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.EnterpriseLibrary.Common" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.505.0" newVersion="5.0.505.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.serviceModel>
    <behaviors>
      <endpointBehaviors>
        <behavior name="EnableMessageInspectorBehavior">
          <MessageInspectorBehavior />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <extensions>
      <behaviorExtensions>
            <add name="MessageInspectorBehavior" type="$safeprojectname$.Common.AspNetApplicationServices.MessageInspectorBehaviorExtension, $safeprojectname$" />
      </behaviorExtensions>
    </extensions>
    <bindings>
      <!--TODO: crear un binding para servicios que utilizan gran cantuidad de datos como por ejemplo IProviderSynduication y asignar un  valor maxStringContentLength bastante alto
                dejar el binding por defecto con las readerQuotas por defecto y asignar ese binding a los servicios que no utilizan datos pesados
      -->
      <netTcpBinding>
        <binding name="$customBindingIsNetTcp$" maxBufferSize="5242880" maxBufferPoolSize="524288" maxReceivedMessageSize="5242880">
          <readerQuotas maxDepth="32" maxStringContentLength="5242880" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"></readerQuotas>
          <security mode="Transport">
            <transport clientCredentialType="Windows" protectionLevel="EncryptAndSign" />
            <message clientCredentialType="Windows" />
          </security>
        </binding>
      </netTcpBinding>
      <basicHttpBinding>
        <binding name="$customBindingIsBasicHttp$" maxBufferSize="5242880" maxBufferPoolSize="524288" maxReceivedMessageSize="5242880">
          <readerQuotas maxDepth="32" maxStringContentLength="5242880" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"></readerQuotas>
        </binding>
      </basicHttpBinding>
    </bindings>
    <client>
      <endpoint name="IProviderMembership"     address="$customBindingProtocol$://localhost:8523/$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices/Admin/MembershipService/"  behaviorConfiguration="EnableMessageInspectorBehavior"  binding="$customBindingTypeName$" bindingConfiguration="$customBindingConfigurationName$" contract="$customNamespace$.Models.Membership.IProviderMembership" />
      <endpoint name="IProviderAuthentication" address="$customBindingProtocol$://localhost:8524/$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices/AuthenticationService/"    behaviorConfiguration="EnableMessageInspectorBehavior"  binding="$customBindingTypeName$" bindingConfiguration="$customBindingConfigurationName$" contract="$customNamespace$.Models.Authentication.IProviderAuthentication" />
      <endpoint name="IProviderRoleManager"    address="$customBindingProtocol$://localhost:8525/$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices/Admin/RoleServiceAdmin/"   behaviorConfiguration="EnableMessageInspectorBehavior"  binding="$customBindingTypeName$" bindingConfiguration="$customBindingConfigurationName$" contract="$customNamespace$.Models.Roles.IProviderRoleManager" />
      <endpoint name="IProviderRoles"          address="$customBindingProtocol$://localhost:8526/$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices/RoleService/"              behaviorConfiguration="EnableMessageInspectorBehavior"  binding="$customBindingTypeName$" bindingConfiguration="$customBindingConfigurationName$" contract="$customNamespace$.Models.Roles.IProviderRoles" />
      <endpoint name="IProviderProfile"        address="$customBindingProtocol$://localhost:8527/$customNamespace$.WCF.ServicesLibrary.AspNetApplicationServices/ProfileService/"           behaviorConfiguration="EnableMessageInspectorBehavior"  binding="$customBindingTypeName$" bindingConfiguration="$customBindingConfigurationName$" contract="$customNamespace$.Models.Profile.IProviderProfile" />
      <endpoint name="IProviderLogging"        address="$customBindingProtocol$://localhost:8528/$customNamespace$.WCF.ServicesLibrary.LoggingServices/LoggingService/"                     behaviorConfiguration=""                                binding="$customBindingTypeName$" bindingConfiguration="$customBindingConfigurationName$" contract="$customNamespace$.Models.Logging.IProviderLogging" />
      <endpoint name="IProviderSyndication"    address="$customBindingProtocol$://localhost:8529/$customNamespace$.WCF.ServicesLibrary.SyndicationServices/SyndicationService/"             behaviorConfiguration=""                                binding="$customBindingTypeName$" bindingConfiguration="$customBindingConfigurationName$" contract="$customNamespace$.Models.Syndication.IProviderSyndication" />
    </client>
  </system.serviceModel>
</configuration>