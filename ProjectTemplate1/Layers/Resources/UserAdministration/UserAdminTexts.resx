<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="ApproveAccount" xml:space="preserve">
    <value>Approve Account</value>
  </data>
  <data name="Approved" xml:space="preserve">
    <value>Approved</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="CreationDate" xml:space="preserve">
    <value>Creation Date</value>
  </data>
  <data name="CreationDateFrom" xml:space="preserve">
    <value>Creation date from</value>
  </data>
  <data name="CreationDateTo" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="CreationDateToGreaterThanFrom" xml:space="preserve">
    <value>"Creation date (from)" must be smaller than "Creation date (to)"</value>
  </data>
  <data name="DeleteAccount" xml:space="preserve">
    <value>Delete Account</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="EmailAddressInvalid" xml:space="preserve">
    <value>Invalid Email Address</value>
  </data>
  <data name="EmailAndComments" xml:space="preserve">
    <value>Email Address &amp; Comments</value>
  </data>
  <data name="FilterByRoleName" xml:space="preserve">
    <value>Filter by role name</value>
  </data>
  <data name="IsOnline" xml:space="preserve">
    <value>Is Online</value>
  </data>
  <data name="LastActive" xml:space="preserve">
    <value>Last Active</value>
  </data>
  <data name="LastActivity" xml:space="preserve">
    <value>Last Activity</value>
  </data>
  <data name="LastChanged" xml:space="preserve">
    <value>Last Changed</value>
  </data>
  <data name="LastLockOut" xml:space="preserve">
    <value>Last Lock Out</value>
  </data>
  <data name="LastLogin" xml:space="preserve">
    <value>Last Login</value>
  </data>
  <data name="LastPasswordChange" xml:space="preserve">
    <value>Last Password change</value>
  </data>
  <data name="Locked" xml:space="preserve">
    <value>Locked</value>
  </data>
  <data name="LockedOutSince" xml:space="preserve">
    <value>Locked out since</value>
  </data>
  <data name="ManagePassword" xml:space="preserve">
    <value>Manage your password</value>
  </data>
  <data name="ManageUserRoles" xml:space="preserve">
    <value>Manage User Roles</value>
  </data>
  <data name="Never" xml:space="preserve">
    <value>Never</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="NoPasswordQuestionDefined" xml:space="preserve">
    <value>No password question defined</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Old password</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordAnswer" xml:space="preserve">
    <value>Password Answer</value>
  </data>
  <data name="PasswordChangeAndSetLiteral" xml:space="preserve">
    <value>Password was changed and an email was sent to the user</value>
  </data>
  <data name="PasswordCouldNotChangedLiteral" xml:space="preserve">
    <value>Could not change password</value>
  </data>
  <data name="PasswordQuestion" xml:space="preserve">
    <value>Password Question</value>
  </data>
  <data name="ResetRandomPasswordEmailUser" xml:space="preserve">
    <value>Reset to Random Password and Email User</value>
  </data>
  <data name="RoleCreate" xml:space="preserve">
    <value>Create new role</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="SaveComments" xml:space="preserve">
    <value>Save comments</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="UnApproveAccount" xml:space="preserve">
    <value>UnApprove Account</value>
  </data>
  <data name="UserCouldNotBeUnlocked" xml:space="preserve">
    <value>User could not be unlocked</value>
  </data>
  <data name="UserDeleted" xml:space="preserve">
    <value>User deleted</value>
  </data>
  <data name="UserDetails" xml:space="preserve">
    <value>User details</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User name</value>
  </data>
  <data name="UserRoles" xml:space="preserve">
    <value>User Roles</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="UserSaved" xml:space="preserve">
    <value>User saved</value>
  </data>
  <data name="UsersFilter" xml:space="preserve">
    <value>Users Filter</value>
  </data>
  <data name="UsersFilterError" xml:space="preserve">
    <value>Errors where found while filtering users</value>
  </data>
  <data name="UsersInRole" xml:space="preserve">
    <value>Users in role </value>
  </data>
  <data name="DuplicateEmail" xml:space="preserve">
    <value>A username for that e-mail address already exists. Please enter a different e-mail address.</value>
  </data>
  <data name="DuplicateUserName" xml:space="preserve">
    <value>Username already exists. Please enter a different user name.</value>
  </data>
  <data name="InvalidAnswer" xml:space="preserve">
    <value>The password retrieval answer provided is invalid. Please check the value and try again.</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>The e-mail address provided is invalid. Please check the value and try again.</value>
  </data>
  <data name="InvalidPassword" xml:space="preserve">
    <value>The password provided is invalid. Please enter a valid password value.</value>
  </data>
  <data name="InvalidQuestion" xml:space="preserve">
    <value>The password retrieval question provided is invalid. Please check the value and try again.</value>
  </data>
  <data name="InvalidUserName" xml:space="preserve">
    <value>The user name provided is invalid. Please check the value and try again</value>
  </data>
  <data name="ResetPasswordMailBody" xml:space="preserve">
    <value>Your new password is: {0}</value>
  </data>
  <data name="ResetPasswordMailSubject" xml:space="preserve">
    <value>Your new password</value>
  </data>
  <data name="UserSearch" xml:space="preserve">
    <value>User Search</value>
  </data>
  <data name="UserIsAlreadyInRole" xml:space="preserve">
    <value>The user {0} is already in role {1}</value>
  </data>
  <data name="RoleAlreadyExists" xml:space="preserve">
    <value>Role '{0}' already exists</value>
  </data>
  <data name="RoleHasPendingUsersError" xml:space="preserve">
    <value>Role has pending users and cannot be deleted</value>
  </data>
  <data name="RoleUnexists" xml:space="preserve">
    <value>Role does not exists</value>
  </data>
  <data name="UsersNotFound" xml:space="preserve">
    <value>No users found</value>
  </data>
  <data name="UserInfo" xml:space="preserve">
    <value>User Info</value>
  </data>
  <data name="UserStatus" xml:space="preserve">
    <value>User status</value>
  </data>
  <data name="Offline" xml:space="preserve">
    <value>Offline</value>
  </data>
  <data name="Online" xml:space="preserve">
    <value>Online</value>
  </data>
  <data name="Unapproved" xml:space="preserve">
    <value>Unapproved</value>
  </data>
  <data name="RolesUpdate" xml:space="preserve">
    <value>Update Roles</value>
  </data>
  <data name="UserRolesNeeded" xml:space="preserve">
    <value>Users must have at least one role</value>
  </data>
  <data name="UserNotFound" xml:space="preserve">
    <value>User not found</value>
  </data>
  <data name="UserAccountActivated" xml:space="preserve">
    <value>User account has been activated</value>
  </data>
  <data name="ActivationTokenExpired" xml:space="preserve">
    <value>Activation token has expired. Activating your account requires a new token</value>
  </data>
  <data name="UserUnlocked" xml:space="preserve">
    <value>User unlocked</value>
  </data>
  <data name="UnLockUser" xml:space="preserve">
    <value>Unlock User</value>
  </data>
</root>